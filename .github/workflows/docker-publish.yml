name: Build and Push Docker Images to GHCR

on:
  push:
    branches:
      - main # Trigger the workflow on pushes to the 'main' branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      # Declare the image name with the new name: ml-ai-tr-pipeline
      IMAGE_NAME: ghcr.io/derint/ip-bkd # Use the custom name "ml-ai-tr-pipeline"

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      # Step 3: Set Image Tags (using the run_number as build tag)
      - name: Set Image Tags
        run: |
          BUILD_TAG="${{ github.run_number }}"  # Use the run number as the build tag
          VERSION_TAG="1.0.${{ github.run_number }}"  # 1.0.<build_number> version tag
          echo "BUILD_TAG=${BUILD_TAG}" >> $GITHUB_ENV
          echo "VERSION_TAG=${VERSION_TAG}" >> $GITHUB_ENV

      # Step 4: Build Docker Image (1.0.<build_number>)
      - name: Build Docker Image (1.0.<build_number>)
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.VERSION_TAG }} .

      # Step 5: Push Docker Image (1.0.<build_number>)
      - name: Push Docker Image (1.0.<build_number>)
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ env.VERSION_TAG }}

      # Step 6: Build Docker Image (build number)
      - name: Build Docker Image (build number)
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.BUILD_TAG }} .

      # Step 7: Push Docker Image (build number)
      - name: Push Docker Image (build number)
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ env.BUILD_TAG }}

      # Step 8: Build Docker Image (latest)
      - name: Build Docker Image (latest)
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:latest .

      # Step 9: Push Docker Image (latest)
      - name: Push Docker Image (latest)
        run: |
          docker push ${{ env.IMAGE_NAME }}:latest
